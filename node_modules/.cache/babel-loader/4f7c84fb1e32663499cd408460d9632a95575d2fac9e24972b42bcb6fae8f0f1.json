{"ast":null,"code":"var _jsxFileName = \"/Users/neilgupta/Desktop/nba-ai-predictor/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { BalldontlieAPI } from \"@balldontlie/sdk\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NBABettingApp = () => {\n  _s();\n  const [teamName, setTeamName] = useState('');\n  const [loading, setLoading] = useState(true);\n  const api = new BalldontlieAPI({\n    apiKey: \"dae8ef55-6309-4191-aefc-29dc0ac60023\"\n  });\n  useEffect(() => {\n    const fetchTeamData = async () => {\n      try {\n        const team = await api.nba.getTeam(1); // Replace 1 with the correct team ID\n        setTeamName(team.name); // Assuming 'name' is the field that contains the team name\n      } catch (error) {\n        console.error(\"Error fetching team data:\", error);\n      }\n    };\n    fetchTeamData();\n  }, []);\n\n  // useEffect(() => {\n  //   const fetchGamesAndPlayers = async () => {\n  //     setLoading(true);\n  //     try {\n  //       // Replace with actual API endpoint for NBA games\n  //       const gamesResponse = await axios.get(\"https://api.sportsdata.io/v4/nba/scores/json/GamesByDate/2025-01-24\", {\n  //         headers: {\n  //           \"Ocp-Apim-Subscription-Key\": \"YOUR_API_KEY_HERE\"\n  //         }\n  //       });\n\n  //       setGames(gamesResponse.data);\n\n  //       // Replace with actual API endpoint for player stats\n  //       const playersResponse = await axios.get(\"https://api.sportsdata.io/v4/nba/stats/json/PlayerSeasonStats/2025\", {\n  //         headers: {\n  //           \"Ocp-Apim-Subscription-Key\": \"YOUR_API_KEY_HERE\"\n  //         }\n  //       });\n\n  //       const topPlayers = playersResponse.data\n  //         .filter(player => player.PointsPerGame > 20) // Example filter: players averaging > 20 PPG\n  //         .sort((a, b) => b.PointsPerGame - a.PointsPerGame) // Sort by PPG\n  //         .slice(0, 10); // Top 10 players\n\n  //       setPlayers(topPlayers);\n  //     } catch (error) {\n  //       console.error(\"Error fetching data:\", error);\n  //     } finally {\n  //       setLoading(false);\n  //     }\n  //   };\n\n  //   fetchGamesAndPlayers();\n  // }, []);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"NBA Betting Insights\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold mb-2\",\n        children: \"Today's Games\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Team: \", teamName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(NBABettingApp, \"0nZ7Iupf+DAATQL5OokUOfaui0A=\");\n_c = NBABettingApp;\nexport default NBABettingApp;\nvar _c;\n$RefreshReg$(_c, \"NBABettingApp\");","map":{"version":3,"names":["React","useState","useEffect","axios","BalldontlieAPI","jsxDEV","_jsxDEV","NBABettingApp","_s","teamName","setTeamName","loading","setLoading","api","apiKey","fetchTeamData","team","nba","getTeam","name","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/neilgupta/Desktop/nba-ai-predictor/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { BalldontlieAPI } from \"@balldontlie/sdk\";\n\n\nconst NBABettingApp = () => {\n  const [teamName, setTeamName] = useState('');\n  const [loading, setLoading] = useState(true);\n\n  const api = new BalldontlieAPI({ apiKey: \"dae8ef55-6309-4191-aefc-29dc0ac60023\" });\n\n  useEffect(() => {\n    const fetchTeamData = async () => {\n      try {\n        const team = await api.nba.getTeam(1);  // Replace 1 with the correct team ID\n        setTeamName(team.name);  // Assuming 'name' is the field that contains the team name\n      } catch (error) {\n        console.error(\"Error fetching team data:\", error);\n      }\n    };\n\n    fetchTeamData();\n  }, []);\n\n\n\n\n  // useEffect(() => {\n  //   const fetchGamesAndPlayers = async () => {\n  //     setLoading(true);\n  //     try {\n  //       // Replace with actual API endpoint for NBA games\n  //       const gamesResponse = await axios.get(\"https://api.sportsdata.io/v4/nba/scores/json/GamesByDate/2025-01-24\", {\n  //         headers: {\n  //           \"Ocp-Apim-Subscription-Key\": \"YOUR_API_KEY_HERE\"\n  //         }\n  //       });\n\n  //       setGames(gamesResponse.data);\n\n  //       // Replace with actual API endpoint for player stats\n  //       const playersResponse = await axios.get(\"https://api.sportsdata.io/v4/nba/stats/json/PlayerSeasonStats/2025\", {\n  //         headers: {\n  //           \"Ocp-Apim-Subscription-Key\": \"YOUR_API_KEY_HERE\"\n  //         }\n  //       });\n\n  //       const topPlayers = playersResponse.data\n  //         .filter(player => player.PointsPerGame > 20) // Example filter: players averaging > 20 PPG\n  //         .sort((a, b) => b.PointsPerGame - a.PointsPerGame) // Sort by PPG\n  //         .slice(0, 10); // Top 10 players\n\n  //       setPlayers(topPlayers);\n  //     } catch (error) {\n  //       console.error(\"Error fetching data:\", error);\n  //     } finally {\n  //       setLoading(false);\n  //     }\n  //   };\n\n  //   fetchGamesAndPlayers();\n  // }, []);\n\n  if (loading) {\n    return <div className=\"text-center\">Loading...</div>;\n  }\n\n  return (\n    <div className=\"p-4\">\n      <h1 className=\"text-2xl font-bold mb-4\">NBA Betting Insights</h1>\n\n      <div className=\"mb-8\">\n        <h2 className=\"text-xl font-semibold mb-2\">Today's Games</h2>\n        <p>Team: {teamName}</p>\n\n\n      </div>\n\n      {/* <div>\n        <h2 className=\"text-xl font-semibold mb-2\">Top Players to Watch</h2>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n          {players.map(player => (\n            <div key={player.PlayerID}>\n              <div>\n                <p className=\"font-bold\">{player.Name}</p>\n                <p>Team: {player.Team}</p>\n                <p>Points Per Game: {player.PointsPerGame}</p>\n                <p>Assists Per Game: {player.AssistsPerGame}</p>\n                <p>Rebounds Per Game: {player.ReboundsPerGame}</p>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div> */}\n    </div>\n  );\n};\n\nexport default NBABettingApp;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGlD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMY,GAAG,GAAG,IAAIT,cAAc,CAAC;IAAEU,MAAM,EAAE;EAAuC,CAAC,CAAC;EAElFZ,SAAS,CAAC,MAAM;IACd,MAAMa,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,IAAI,GAAG,MAAMH,GAAG,CAACI,GAAG,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAE;QACxCR,WAAW,CAACM,IAAI,CAACG,IAAI,CAAC,CAAC,CAAE;MAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IAEDL,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;;EAKN;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA,IAAIJ,OAAO,EAAE;IACX,oBAAOL,OAAA;MAAKgB,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACtD;EAEA,oBACErB,OAAA;IAAKgB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBjB,OAAA;MAAIgB,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EAAC;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEjErB,OAAA;MAAKgB,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnBjB,OAAA;QAAIgB,SAAS,EAAC,4BAA4B;QAAAC,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7DrB,OAAA;QAAAiB,QAAA,GAAG,QAAM,EAACd,QAAQ;MAAA;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGpB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAkBH,CAAC;AAEV,CAAC;AAACnB,EAAA,CA3FID,aAAa;AAAAqB,EAAA,GAAbrB,aAAa;AA6FnB,eAAeA,aAAa;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}